package com.osi.finx.model;
// Generated 08 16, 18 6:39:07 PM by Hibernate Tools 5.2.3.Final

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * QxmaFtTransfer generated by hbm2java
 */
@Entity
@Table(name = "qxma_ft_transfer", catalog = "finx_db", uniqueConstraints = @UniqueConstraint(columnNames = "transaction_id"))
public class QxmaFtTransfer implements java.io.Serializable {

	private Long transferId;
	private QxmaFtTransferType qxmaFtTransferType;
	private QxmaFtWallet qxmaFtWalletByToWalletId;
	private QxmaFtWallet qxmaFtWalletByFromWalletId;
	private BigDecimal amount;
	private String details;
	private String ipAddress;
	private String referenceId;
	private String transactionId;
	private Set<QxmaFtWalletLog> qxmaFtWalletLogs = new HashSet<QxmaFtWalletLog>(0);
	private Set<QxmaFtLedger> qxmaFtLedgers = new HashSet<QxmaFtLedger>(0);

	public QxmaFtTransfer() {
	}

	public QxmaFtTransfer(QxmaFtTransferType qxmaFtTransferType, QxmaFtWallet qxmaFtWalletByToWalletId,
			QxmaFtWallet qxmaFtWalletByFromWalletId) {
		this.qxmaFtTransferType = qxmaFtTransferType;
		this.qxmaFtWalletByToWalletId = qxmaFtWalletByToWalletId;
		this.qxmaFtWalletByFromWalletId = qxmaFtWalletByFromWalletId;
	}

	public QxmaFtTransfer(QxmaFtTransferType qxmaFtTransferType, QxmaFtWallet qxmaFtWalletByToWalletId,
			QxmaFtWallet qxmaFtWalletByFromWalletId, BigDecimal amount, String details, String ipAddress,
			String referenceId, String transactionId, Set<QxmaFtWalletLog> qxmaFtWalletLogs,
			Set<QxmaFtLedger> qxmaFtLedgers) {
		this.qxmaFtTransferType = qxmaFtTransferType;
		this.qxmaFtWalletByToWalletId = qxmaFtWalletByToWalletId;
		this.qxmaFtWalletByFromWalletId = qxmaFtWalletByFromWalletId;
		this.amount = amount;
		this.details = details;
		this.ipAddress = ipAddress;
		this.referenceId = referenceId;
		this.transactionId = transactionId;
		this.qxmaFtWalletLogs = qxmaFtWalletLogs;
		this.qxmaFtLedgers = qxmaFtLedgers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "transfer_id", unique = true, nullable = false)
	public Long getTransferId() {
		return this.transferId;
	}

	public void setTransferId(Long transferId) {
		this.transferId = transferId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type_id", nullable = false)
	public QxmaFtTransferType getQxmaFtTransferType() {
		return this.qxmaFtTransferType;
	}

	public void setQxmaFtTransferType(QxmaFtTransferType qxmaFtTransferType) {
		this.qxmaFtTransferType = qxmaFtTransferType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "to_wallet_id", nullable = false)
	public QxmaFtWallet getQxmaFtWalletByToWalletId() {
		return this.qxmaFtWalletByToWalletId;
	}

	public void setQxmaFtWalletByToWalletId(QxmaFtWallet qxmaFtWalletByToWalletId) {
		this.qxmaFtWalletByToWalletId = qxmaFtWalletByToWalletId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "from_wallet_id", nullable = false)
	public QxmaFtWallet getQxmaFtWalletByFromWalletId() {
		return this.qxmaFtWalletByFromWalletId;
	}

	public void setQxmaFtWalletByFromWalletId(QxmaFtWallet qxmaFtWalletByFromWalletId) {
		this.qxmaFtWalletByFromWalletId = qxmaFtWalletByFromWalletId;
	}

	@Column(name = "amount")
	public BigDecimal getAmount() {
		return this.amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	@Column(name = "details")
	public String getDetails() {
		return this.details;
	}

	public void setDetails(String details) {
		this.details = details;
	}

	@Column(name = "ip_address", length = 30)
	public String getIpAddress() {
		return this.ipAddress;
	}

	public void setIpAddress(String ipAddress) {
		this.ipAddress = ipAddress;
	}

	@Column(name = "reference_id")
	public String getReferenceId() {
		return this.referenceId;
	}

	public void setReferenceId(String referenceId) {
		this.referenceId = referenceId;
	}

	@Column(name = "transaction_id", unique = true)
	public String getTransactionId() {
		return this.transactionId;
	}

	public void setTransactionId(String transactionId) {
		this.transactionId = transactionId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "qxmaFtTransfer")
	public Set<QxmaFtWalletLog> getQxmaFtWalletLogs() {
		return this.qxmaFtWalletLogs;
	}

	public void setQxmaFtWalletLogs(Set<QxmaFtWalletLog> qxmaFtWalletLogs) {
		this.qxmaFtWalletLogs = qxmaFtWalletLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "qxmaFtTransfer")
	public Set<QxmaFtLedger> getQxmaFtLedgers() {
		return this.qxmaFtLedgers;
	}

	public void setQxmaFtLedgers(Set<QxmaFtLedger> qxmaFtLedgers) {
		this.qxmaFtLedgers = qxmaFtLedgers;
	}

}
