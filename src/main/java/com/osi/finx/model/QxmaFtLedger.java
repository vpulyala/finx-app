package com.osi.finx.model;
// Generated 08 16, 18 6:39:07 PM by Hibernate Tools 5.2.3.Final

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * QxmaFtLedger generated by hbm2java
 */
@Entity
@Table(name = "qxma_ft_ledger", catalog = "finx_db")
public class QxmaFtLedger implements java.io.Serializable {

	private Long ledgerId;
	private QxmaFtCurrencies qxmaFtCurrencies;
	private QxmaFtLedgerStatus qxmaFtLedgerStatus;
	private QxmaFtLedgerType qxmaFtLedgerType;
	private QxmaFtParties qxmaFtParties;
	private QxmaFtTransfer qxmaFtTransfer;
	private Character breakdown;
	private BigDecimal amount;
	private String referenceId;
	private Character bankDetails;
	private String remarks;
	private Date period;
	private Date closedAt;
	private Date settledAt;
	private Long settledBy;
	private Date createdAt;
	private Date updatedAt;

	public QxmaFtLedger() {
	}

	public QxmaFtLedger(QxmaFtCurrencies qxmaFtCurrencies, QxmaFtLedgerStatus qxmaFtLedgerStatus,
			QxmaFtLedgerType qxmaFtLedgerType, QxmaFtParties qxmaFtParties, QxmaFtTransfer qxmaFtTransfer) {
		this.qxmaFtCurrencies = qxmaFtCurrencies;
		this.qxmaFtLedgerStatus = qxmaFtLedgerStatus;
		this.qxmaFtLedgerType = qxmaFtLedgerType;
		this.qxmaFtParties = qxmaFtParties;
		this.qxmaFtTransfer = qxmaFtTransfer;
	}

	public QxmaFtLedger(QxmaFtCurrencies qxmaFtCurrencies, QxmaFtLedgerStatus qxmaFtLedgerStatus,
			QxmaFtLedgerType qxmaFtLedgerType, QxmaFtParties qxmaFtParties, QxmaFtTransfer qxmaFtTransfer,
			Character breakdown, BigDecimal amount, String referenceId, Character bankDetails, String remarks,
			Date period, Date closedAt, Date settledAt, Long settledBy, Date createdAt, Date updatedAt) {
		this.qxmaFtCurrencies = qxmaFtCurrencies;
		this.qxmaFtLedgerStatus = qxmaFtLedgerStatus;
		this.qxmaFtLedgerType = qxmaFtLedgerType;
		this.qxmaFtParties = qxmaFtParties;
		this.qxmaFtTransfer = qxmaFtTransfer;
		this.breakdown = breakdown;
		this.amount = amount;
		this.referenceId = referenceId;
		this.bankDetails = bankDetails;
		this.remarks = remarks;
		this.period = period;
		this.closedAt = closedAt;
		this.settledAt = settledAt;
		this.settledBy = settledBy;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ledger_id", unique = true, nullable = false)
	public Long getLedgerId() {
		return this.ledgerId;
	}

	public void setLedgerId(Long ledgerId) {
		this.ledgerId = ledgerId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "currency_id", nullable = false)
	public QxmaFtCurrencies getQxmaFtCurrencies() {
		return this.qxmaFtCurrencies;
	}

	public void setQxmaFtCurrencies(QxmaFtCurrencies qxmaFtCurrencies) {
		this.qxmaFtCurrencies = qxmaFtCurrencies;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ledger_status_id", nullable = false)
	public QxmaFtLedgerStatus getQxmaFtLedgerStatus() {
		return this.qxmaFtLedgerStatus;
	}

	public void setQxmaFtLedgerStatus(QxmaFtLedgerStatus qxmaFtLedgerStatus) {
		this.qxmaFtLedgerStatus = qxmaFtLedgerStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ledger_type_id", nullable = false)
	public QxmaFtLedgerType getQxmaFtLedgerType() {
		return this.qxmaFtLedgerType;
	}

	public void setQxmaFtLedgerType(QxmaFtLedgerType qxmaFtLedgerType) {
		this.qxmaFtLedgerType = qxmaFtLedgerType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "party_id", nullable = false)
	public QxmaFtParties getQxmaFtParties() {
		return this.qxmaFtParties;
	}

	public void setQxmaFtParties(QxmaFtParties qxmaFtParties) {
		this.qxmaFtParties = qxmaFtParties;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "transfer_id", nullable = false)
	public QxmaFtTransfer getQxmaFtTransfer() {
		return this.qxmaFtTransfer;
	}

	public void setQxmaFtTransfer(QxmaFtTransfer qxmaFtTransfer) {
		this.qxmaFtTransfer = qxmaFtTransfer;
	}

	@Column(name = "breakdown", length = 0)
	public Character getBreakdown() {
		return this.breakdown;
	}

	public void setBreakdown(Character breakdown) {
		this.breakdown = breakdown;
	}

	@Column(name = "amount")
	public BigDecimal getAmount() {
		return this.amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	@Column(name = "reference_id")
	public String getReferenceId() {
		return this.referenceId;
	}

	public void setReferenceId(String referenceId) {
		this.referenceId = referenceId;
	}

	@Column(name = "bank_details", length = 0)
	public Character getBankDetails() {
		return this.bankDetails;
	}

	public void setBankDetails(Character bankDetails) {
		this.bankDetails = bankDetails;
	}

	@Column(name = "remarks")
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "period", length = 19)
	public Date getPeriod() {
		return this.period;
	}

	public void setPeriod(Date period) {
		this.period = period;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "closed_at", length = 19)
	public Date getClosedAt() {
		return this.closedAt;
	}

	public void setClosedAt(Date closedAt) {
		this.closedAt = closedAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "settled_at", length = 19)
	public Date getSettledAt() {
		return this.settledAt;
	}

	public void setSettledAt(Date settledAt) {
		this.settledAt = settledAt;
	}

	@Column(name = "settled_by")
	public Long getSettledBy() {
		return this.settledBy;
	}

	public void setSettledBy(Long settledBy) {
		this.settledBy = settledBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

}
