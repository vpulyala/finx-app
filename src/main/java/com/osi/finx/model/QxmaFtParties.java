package com.osi.finx.model;
// Generated 08 16, 18 6:39:07 PM by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * QxmaFtParties generated by hbm2java
 */
@Entity
@Table(name = "qxma_ft_parties", catalog = "finx_db")
public class QxmaFtParties implements java.io.Serializable {

	private long partyId;
	private QxmaFtPartyType qxmaFtPartyType;
	private String externalId;
	private Byte status;
	private Character metadata;
	private Long createdBy;
	private Date createdAt;
	private Long updatedBy;
	private Date lastDisbursedAt;
	private Set<QxmaFtCharges> qxmaFtChargeses = new HashSet<QxmaFtCharges>(0);
	private Set<QxmaFtWallet> qxmaFtWallets = new HashSet<QxmaFtWallet>(0);
	private Set<QxmaFtLedger> qxmaFtLedgers = new HashSet<QxmaFtLedger>(0);

	public QxmaFtParties() {
	}

	public QxmaFtParties(long partyId, QxmaFtPartyType qxmaFtPartyType) {
		this.partyId = partyId;
		this.qxmaFtPartyType = qxmaFtPartyType;
	}

	public QxmaFtParties(long partyId, QxmaFtPartyType qxmaFtPartyType, String externalId, Byte status,
			Character metadata, Long createdBy, Date createdAt, Long updatedBy, Date lastDisbursedAt,
			Set<QxmaFtCharges> qxmaFtChargeses, Set<QxmaFtWallet> qxmaFtWallets, Set<QxmaFtLedger> qxmaFtLedgers) {
		this.partyId = partyId;
		this.qxmaFtPartyType = qxmaFtPartyType;
		this.externalId = externalId;
		this.status = status;
		this.metadata = metadata;
		this.createdBy = createdBy;
		this.createdAt = createdAt;
		this.updatedBy = updatedBy;
		this.lastDisbursedAt = lastDisbursedAt;
		this.qxmaFtChargeses = qxmaFtChargeses;
		this.qxmaFtWallets = qxmaFtWallets;
		this.qxmaFtLedgers = qxmaFtLedgers;
	}

	@Id

	@Column(name = "party_id", unique = true, nullable = false)
	public long getPartyId() {
		return this.partyId;
	}

	public void setPartyId(long partyId) {
		this.partyId = partyId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pt_id", nullable = false)
	public QxmaFtPartyType getQxmaFtPartyType() {
		return this.qxmaFtPartyType;
	}

	public void setQxmaFtPartyType(QxmaFtPartyType qxmaFtPartyType) {
		this.qxmaFtPartyType = qxmaFtPartyType;
	}

	@Column(name = "external_id", length = 100)
	public String getExternalId() {
		return this.externalId;
	}

	public void setExternalId(String externalId) {
		this.externalId = externalId;
	}

	@Column(name = "status")
	public Byte getStatus() {
		return this.status;
	}

	public void setStatus(Byte status) {
		this.status = status;
	}

	@Column(name = "metadata", length = 0)
	public Character getMetadata() {
		return this.metadata;
	}

	public void setMetadata(Character metadata) {
		this.metadata = metadata;
	}

	@Column(name = "created_by")
	public Long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Long createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "updated_by")
	public Long getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Long updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_disbursed_at", length = 19)
	public Date getLastDisbursedAt() {
		return this.lastDisbursedAt;
	}

	public void setLastDisbursedAt(Date lastDisbursedAt) {
		this.lastDisbursedAt = lastDisbursedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "qxmaFtParties")
	public Set<QxmaFtCharges> getQxmaFtChargeses() {
		return this.qxmaFtChargeses;
	}

	public void setQxmaFtChargeses(Set<QxmaFtCharges> qxmaFtChargeses) {
		this.qxmaFtChargeses = qxmaFtChargeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "qxmaFtParties")
	public Set<QxmaFtWallet> getQxmaFtWallets() {
		return this.qxmaFtWallets;
	}

	public void setQxmaFtWallets(Set<QxmaFtWallet> qxmaFtWallets) {
		this.qxmaFtWallets = qxmaFtWallets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "qxmaFtParties")
	public Set<QxmaFtLedger> getQxmaFtLedgers() {
		return this.qxmaFtLedgers;
	}

	public void setQxmaFtLedgers(Set<QxmaFtLedger> qxmaFtLedgers) {
		this.qxmaFtLedgers = qxmaFtLedgers;
	}

}
